<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlobHelper</name>
    </assembly>
    <members>
        <member name="T:BlobHelper.BlobClient">
            <summary>
            BLOB storage client.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobClient.#ctor(BlobHelper.AzureSettings)">
            <summary>
            Instantiate the object for Azure BLOB strorage.
            </summary>
            <param name="config">Storage configuration.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.#ctor(BlobHelper.AwsSettings)">
            <summary>
            Instantiate the object for AWS S3 strorage.
            </summary>
            <param name="config">Storage configuration.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.#ctor(BlobHelper.DiskSettings)">
            <summary>
            Instantiate the object for disk strorage.
            </summary>
            <param name="config">Storage configuration.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.#ctor(BlobHelper.KvpbaseSettings)">
            <summary>
            Instantiate the object for Kvpbase strorage.
            </summary>
            <param name="config">Storage configuration.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.#ctor(BlobHelper.KomodoSettings)">
            <summary>
            Instantiate the object for a Komodo index.
            </summary>
            <param name="config">Storage configuration.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a BLOB by its key.
            </summary>
            <param name="key">Key of the BLOB.</param>
            <param name="token">Cancellation token to cancel the request.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a BLOB.
            </summary>
            <param name="key">Key of the BLOB.</param> 
            <param name="token">Cancellation token to cancel the request.</param>
            <returns>Byte data of the BLOB.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.GetStream(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a BLOB.  Be sure to dispose of the stream.
            </summary>
            <param name="key">Key of the BLOB.</param> 
            <param name="token">Cancellation token to cancel the request.</param>
            <returns>BLOB data.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.Write(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Write a BLOB using a string.
            </summary>
            <param name="key">Key of the BLOB.</param>
            <param name="contentType">Content-type of the object.</param>
            <param name="data">BLOB data.</param>
            <param name="token">Cancellation token to cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:BlobHelper.BlobClient.Write(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Write a BLOB using a byte array.
            </summary>
            <param name="key">Key of the BLOB.</param>
            <param name="contentType">Content-type of the object.</param>
            <param name="data">BLOB data.</param> 
            <param name="token">Cancellation token to cancel the request.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.Write(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Write a BLOB using a stream.
            </summary>
            <param name="key">Key of the BLOB.</param>
            <param name="contentType">Content type.</param>
            <param name="contentLength">Content length.</param>
            <param name="stream">Stream containing the data.</param> 
            <param name="token">Cancellation token to cancel the request.</param>
        </member>
        <member name="M:BlobHelper.BlobClient.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Check if a BLOB exists.
            </summary>
            <param name="key">Key of the BLOB.</param>
            <param name="token">Cancellation token to cancel the request.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <summary>
            Generate a URL for a given object key.
            </summary>
            <param name="key">Object key.</param>
            <param name="token">Cancellation token to cancel the request.</param>
            <returns>URL.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.GetMetadata(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve BLOB metadata.
            </summary>
            <param name="key">Key of the BLOB.</param> 
            <param name="token">Cancellation token to cancel the request.</param>
            <returns>BLOB metadata.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.Enumerate(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerate BLOBs.
            </summary>
            <param name="prefix">Key prefix that must match.</param>
            <param name="continuationToken">Continuation token to use if issuing a subsequent enumeration request.</param>
            <param name="token">Cancellation token to cancel the request.</param> 
            <returns>Enumeration result.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.Empty(System.Threading.CancellationToken)">
            <summary>
            Empty all BLOBs from the container.  Note: this is a destructive operation!
            </summary>
            <param name="token">Cancellation token to cancel the request.</param> 
            <returns>Empty result.</returns>
        </member>
        <member name="M:BlobHelper.BlobClient.WriteMany(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <summary>
            Write multiple BLOBs.
            </summary>
            <param name="objects">Objects to write.</param>
            <param name="token">Cancellation token.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:BlobHelper.BlobCopy">
            <summary>
            BLOB copy.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobCopy.Logger">
            <summary>
            Method to invoke to send log messages.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobCopy.#ctor(BlobHelper.BlobClient,BlobHelper.BlobClient,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="copyFrom">Settings of the repository from which objects should be copied.</param>
            <param name="copyTo">Settings of the repository to which objects should be copied.</param>
            <param name="prefix">Prefix of the objects that should be copied.</param>
        </member>
        <member name="M:BlobHelper.BlobCopy.#ctor(BlobHelper.BlobSettings,BlobHelper.BlobSettings,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="copyFrom">Settings of the repository from which objects should be copied.</param>
            <param name="copyTo">Settings of the repository to which objects should be copied.</param>
            <param name="prefix">Prefix of the objects that should be copied.</param>
        </member>
        <member name="M:BlobHelper.BlobCopy.Start(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Start the copy operation.
            </summary>
            <param name="stopAfter">Stop after this many objects have been copied.</param>
            <param name="token">Cancellation token.</param>
            <returns>Copy statistics.</returns>
        </member>
        <member name="T:BlobHelper.AwsS3BlobClient">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.#ctor(BlobHelper.AwsSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BlobHelper.AwsS3BlobClient"/> class.
            </summary>
            <param name="awsSettings">Settings for <see cref="T:BlobHelper.AwsS3BlobClient"/>.</param>
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.WriteManyAsync(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.EnumerateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AwsS3BlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BlobHelper.AzureBlobClient">
            <inheritdoc />
        </member>
        <member name="P:BlobHelper.AzureBlobClient.StreamBufferSize">
            <summary>
            Buffer size to use when reading from a stream.
            </summary>
        </member>
        <member name="M:BlobHelper.AzureBlobClient.#ctor(BlobHelper.AzureSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BlobHelper.AzureBlobClient"/> class.
            </summary>
            <param name="azureSettings">Settings for <see cref="T:BlobHelper.AzureBlobClient"/>.</param>
        </member>
        <member name="M:BlobHelper.AzureBlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.WriteManyAsync(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.EnumerateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.AzureBlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BlobHelper.DiskBlobClient">
            <inheritdoc />
        </member>
        <member name="P:BlobHelper.DiskBlobClient.StreamBufferSize">
            <summary>
            Buffer size to use when reading from a stream.
            </summary>
        </member>
        <member name="M:BlobHelper.DiskBlobClient.#ctor(BlobHelper.DiskSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BlobHelper.DiskBlobClient"/> class.
            </summary>
            <param name="diskSettings">Settings for <see cref="T:BlobHelper.DiskBlobClient"/>.</param>
        </member>
        <member name="M:BlobHelper.DiskBlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.WriteManyAsync(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.EnumerateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.DiskBlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BlobHelper.IBlobClient">
            <summary>
            An interface for interacting with different BLOB storage providers.
            </summary>
        </member>
        <member name="M:BlobHelper.IBlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the content of the BLOB with the specified key.
            </summary>
            <param name="key">The key of the BLOB to get.</param>
            <param name="token">A cancellation token to observe while waiting for the task to complete.</param>
            <returns>A byte array containing the content of the BLOB.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the stream of the BLOB with the specified key.
            </summary>
            <param name="key">The key of the BLOB to get.</param>
            <param name="token">A cancellation token to observe while waiting for the task to complete.</param>
            <returns>A <see cref="T:BlobHelper.BlobData"/> object containing the stream of the BLOB.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the metadata of the BLOB with the specified key.
            </summary>
            <param name="key">The key of the BLOB to get metadata for.</param>
            <param name="token">A cancellation token to observe while waiting for the task to complete.</param>
            <returns>A <see cref="T:BlobHelper.BlobMetadata"/> object containing the metadata of the BLOB.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Writes the specified data to the BLOB with the specified key.
            </summary>
            <param name="key">The key of the BLOB to write to.</param>
            <param name="contentType">The content type of the BLOB.</param>
            <param name="data">The data to write to the BLOB.</param>
            <param name="token">A cancellation token to observe while waiting for the task to complete.</param>
        </member>
        <member name="M:BlobHelper.IBlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Writes the specified data to the BLOB with the specified key.
            </summary>
            <param name="key">The key of the BLOB to write to.</param>
            <param name="contentType">The content type of the BLOB.</param>
            <param name="data">The data to write to the BLOB.</param>
            <param name="token">A cancellation token to observe while waiting for the task to complete.</param>
        </member>
        <member name="M:BlobHelper.IBlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes the data from the specified stream to the BLOB with the specified key.
            </summary>
            <param name="key">The key of the BLOB to write to.</param>
            <param name="contentType">The content type of the BLOB.</param>
            <param name="contentLength">The length of the content in the stream.</param>
            <param name="stream">The stream containing the data to write to the BLOB.</param>
            <param name="token">A cancellation token to observe while waiting for the task to complete.</param>
        </member>
        <member name="M:BlobHelper.IBlobClient.WriteManyAsync(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <summary>
            Writes many objects to the BLOB storage asynchronously.
            </summary>
            <param name="objects">The list of objects to write to the BLOB storage.</param>
            <param name="token">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an object from the BLOB storage asynchronously.
            </summary>
            <param name="key">The key of the object to delete from the BLOB storage.</param>
            <param name="token">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks if an object with the specified key exists in the BLOB storage asynchronously.
            </summary>
            <param name="key">The key of the object to check.</param>
            <param name="token">The cancellation token.</param>
            <returns>A task representing the asynchronous operation. The task result is true if the object exists; otherwise, false.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <summary>
            Generates a URL to access the object with the specified key in the BLOB storage asynchronously.
            </summary>
            <param name="key">The key of the object to generate the URL for.</param>
            <param name="token">The cancellation token.</param>
            <returns>A string representing the URL to access the object.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.EnumerateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates all objects in the BLOB storage asynchronously.
            </summary>
            <param name="prefix">The prefix used to filter the objects to enumerate.</param>
            <param name="continuationToken">The continuation token used to resume a previous enumeration operation.</param>
            <param name="token">The cancellation token.</param>
            <returns>A task representing the asynchronous operation. The task result is an <see cref="T:BlobHelper.EnumerationResult"/> object containing the enumeration results.</returns>
        </member>
        <member name="M:BlobHelper.IBlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <summary>
            Deletes all objects in the BLOB storage asynchronously.
            </summary>
            <param name="token">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="T:BlobHelper.KomodoBlobClient">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.#ctor(BlobHelper.KomodoSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BlobHelper.KomodoBlobClient"/> class.
            </summary>
            <param name="komodoSettings">Settings for <see cref="T:BlobHelper.KomodoBlobClient"/>.</param>
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.WriteManyAsync(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.EnumerateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KomodoBlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BlobHelper.KvpbaseBlobClient">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.#ctor(BlobHelper.KvpbaseSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:BlobHelper.KvpbaseBlobClient"/> class.
            </summary>
            <param name="kvpbaseSettings">Settings for <see cref="T:BlobHelper.KvpbaseBlobClient"/>.</param>
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.GetMetadataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.WriteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.WriteAsync(System.String,System.String,System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.WriteAsync(System.String,System.String,System.Int64,System.IO.Stream,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.WriteManyAsync(System.Collections.Generic.List{BlobHelper.WriteRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.GenerateUrl(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.EnumerateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BlobHelper.KvpbaseBlobClient.EmptyAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BlobHelper.AwsRegion">
            <summary>
            AWS region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APNortheast1">
            <summary>
            APNortheast1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APNortheast2">
            <summary>
            APNortheast2 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APNortheast3">
            <summary>
            APNortheast3 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APSoutheast1">
            <summary>
            APSoutheast1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APSoutheast2">
            <summary>
            APSoutheast2 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APSoutheast3">
            <summary>
            APSoutheast3 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APSoutheast4">
            <summary>
            APSoutheast4 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.APSouth1">
            <summary>
            APSouth1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.CACentral1">
            <summary>
            CACentral1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.CNNorth1">
            <summary>
            CNNorth1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.CNNorthwest1">
            <summary>
            CNNorthwest1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.EUCentral1">
            <summary>
            EUCentral1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.EUNorth1">
            <summary>
            EUNorth1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.EUWest1">
            <summary>
            EUWest1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.EUWest2">
            <summary>
            EUWest2 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.EUWest3">
            <summary>
            EUWest3 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.SAEast1">
            <summary>
            SAEast1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.USEast1">
            <summary>
            USEast1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.USEast2">
            <summary>
            USEast2 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.USGovCloudEast1">
            <summary>
            USGovCloudEast1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.USGovCloudWest1">
            <summary>
            USGovCloudWest1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.USWest1">
            <summary>
            USWest1 region.
            </summary>
        </member>
        <member name="F:BlobHelper.AwsRegion.USWest2">
            <summary>
            USWest2 region.
            </summary>
        </member>
        <member name="T:BlobHelper.StorageType">
            <summary>
            Storage type.
            </summary>
        </member>
        <member name="F:BlobHelper.StorageType.AwsS3">
            <summary>
            Amazon Simple Storage Service.
            </summary>
        </member>
        <member name="F:BlobHelper.StorageType.Azure">
            <summary>
            Microsoft Azure BLOB Storage Service.
            </summary>
        </member>
        <member name="F:BlobHelper.StorageType.Disk">
            <summary>
            Local filesystem/disk storage.
            </summary>
        </member>
        <member name="F:BlobHelper.StorageType.Komodo">
            <summary>
            Komodo index.
            </summary>
        </member>
        <member name="F:BlobHelper.StorageType.Kvpbase">
            <summary>
            Kvpbase Storage Server.
            </summary>
        </member>
        <member name="T:BlobHelper.SerializationHelper">
            <summary>
            Serialization helper.
            </summary>
        </member>
        <member name="M:BlobHelper.SerializationHelper.CopyObject``1(``0)">
            <summary>
            Copy an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="source">Source object.</param>
            <returns>Copy.</returns>
        </member>
        <member name="M:BlobHelper.SerializationHelper.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:BlobHelper.SerializationHelper.DeserializeJson``1(System.String)">
            <summary>
            Deserialize JSON. 
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:BlobHelper.SerializationHelper.DeserializeJson``1(System.Byte[])">
            <summary>
            Deserialize JSON. 
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="data">JSON data.</param>
            <returns>Instance.</returns>
        </member>
        <member name="T:BlobHelper.Timestamps">
            <summary>
            Object used to measure start, end, and total time associated with an operation.
            </summary>
        </member>
        <member name="P:BlobHelper.Timestamps.Start">
            <summary>
            The time at which the operation started.
            </summary>
        </member>
        <member name="P:BlobHelper.Timestamps.End">
            <summary>
            The time at which the operation ended.
            </summary>
        </member>
        <member name="P:BlobHelper.Timestamps.TotalMs">
            <summary>
            The total number of milliseconds that transpired between Start and End.
            </summary>
        </member>
        <member name="M:BlobHelper.Timestamps.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:BlobHelper.BlobData">
            <summary>
            Contains content-length (how many bytes to read) and data stream for a given object.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobData.ContentLength">
            <summary>
            Content-length of the object (how many bytes to read from Data).
            </summary>
        </member>
        <member name="P:BlobHelper.BlobData.Data">
            <summary>
            Stream containing requested data.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobData.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobData.#ctor(System.Int64,System.IO.Stream)">
            <summary>
            Instantiate.
            </summary>
            <param name="contentLength">Content length.</param>
            <param name="data">Data stream.</param>
        </member>
        <member name="M:BlobHelper.BlobData.Dispose">
            <summary>
            Dispose of resources.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobData.Dispose(System.Boolean)">
            <summary>
            Dispose of resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BlobHelper.BlobMetadata">
            <summary>
            Metadata about a BLOB.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.ContentType">
            <summary>
            Content type for the object.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.ContentLength">
            <summary>
            Content length of the object.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.ETag">
            <summary>
            ETag of the object.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.CreatedUtc">
            <summary>
            Timestamp from when the object was created.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.LastUpdateUtc">
            <summary>
            Timestamp from when the object was last updated, if available.
            </summary>
        </member>
        <member name="P:BlobHelper.BlobMetadata.LastAccessUtc">
            <summary>
            Timestamp from when the object was last accessed, if available.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobMetadata.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:BlobHelper.BlobMetadata.ToString">
            <summary>
            Create a human-readable string of the object.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="T:BlobHelper.CopyStatistics">
            <summary>
            BLOB copy statistics.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.Success">
            <summary>
            Flag indicating if the operation was successful.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.Time">
            <summary>
            Timestamps from the copy operation.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.Exception">
            <summary>
            Exception, if any was encountered.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.ContinuationTokens">
            <summary>
            Number of continuation tokens used.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.BlobsEnumerated">
            <summary>
            Number of BLOBs enumerated.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.BytesEnumerated">
            <summary>
            Number of bytes enumerated.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.BlobsRead">
            <summary>
            Number of BLOBs read.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.BytesRead">
            <summary>
            Number of bytes read.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.BlobsWritten">
            <summary>
            Number of BLOBs written.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.BytesWritten">
            <summary>
            Number of bytes written.
            </summary>
        </member>
        <member name="P:BlobHelper.CopyStatistics.Keys">
            <summary>
            Keys copied.
            </summary>
        </member>
        <member name="M:BlobHelper.CopyStatistics.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:BlobHelper.CopyStatistics.ToString">
            <summary>
            Produce a human-readable string representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlobHelper.EmptyResult">
            <summary>
            Results from a container empty operation. 
            </summary>
        </member>
        <member name="P:BlobHelper.EmptyResult.Count">
            <summary>
            The number of BLOBs.
            </summary>
        </member>
        <member name="P:BlobHelper.EmptyResult.Bytes">
            <summary>
            The total number of bytes represented by the BLOBs.
            </summary>
        </member>
        <member name="P:BlobHelper.EmptyResult.Blobs">
            <summary>
            List of BLOB metadata objects.
            </summary>
        </member>
        <member name="M:BlobHelper.EmptyResult.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="T:BlobHelper.EnumerationResult">
            <summary>
            Enumeration results.
            </summary>
        </member>
        <member name="P:BlobHelper.EnumerationResult.HasMore">
            <summary>
            Flag indicating if more results are available.
            </summary>
        </member>
        <member name="P:BlobHelper.EnumerationResult.NextContinuationToken">
            <summary>
            Next continuation token to supply in order to continue enumerating from the end of the previous request.
            </summary>
        </member>
        <member name="P:BlobHelper.EnumerationResult.Count">
            <summary>
            The number of BLOBs.
            </summary>
        </member>
        <member name="P:BlobHelper.EnumerationResult.Bytes">
            <summary>
            The total number of bytes represented by the BLOBs.
            </summary>
        </member>
        <member name="P:BlobHelper.EnumerationResult.Blobs">
            <summary>
            List of BLOB metadata objects.
            </summary>
        </member>
        <member name="M:BlobHelper.EnumerationResult.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:BlobHelper.EnumerationResult.#ctor(System.String,System.Collections.Generic.List{BlobHelper.BlobMetadata})">
            <summary>
            Instantiate.
            </summary>
            <param name="continuationToken">Continuation token.</param>
            <param name="blobs">BLOBs.</param>
        </member>
        <member name="T:BlobHelper.WriteRequest">
            <summary>
            Write request object, used when writing many objects.
            </summary>
        </member>
        <member name="P:BlobHelper.WriteRequest.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:BlobHelper.WriteRequest.ContentType">
            <summary>
            Content type for the object.
            </summary>
        </member>
        <member name="P:BlobHelper.WriteRequest.ContentLength">
            <summary>
            Content-length of the object (how many bytes to read from DataStream).
            </summary>
        </member>
        <member name="P:BlobHelper.WriteRequest.DataStream">
            <summary>
            Stream containing requested data.
            </summary>
        </member>
        <member name="P:BlobHelper.WriteRequest.Data">
            <summary>
            Bytes containing requested data.
            </summary>
        </member>
        <member name="M:BlobHelper.WriteRequest.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:BlobHelper.WriteRequest.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Object key.</param>
            <param name="contentType">Content type.</param>
            <param name="data">Data.</param>
        </member>
        <member name="M:BlobHelper.WriteRequest.#ctor(System.String,System.String,System.Int64,System.IO.Stream)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Object key.</param>
            <param name="contentType">Content type.</param>
            <param name="contentLength">Content length.</param>
            <param name="stream">Stream containing the data.</param> 
        </member>
        <member name="T:BlobHelper.AwsSettings">
            <summary>
            Settings when using AWS S3 for storage.
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.Endpoint">
            <summary>
            Override the AWS S3 endpoint (if using non-Amazon storage), otherwise leave null.
            Use the form http://localhost:8000/
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.Ssl">
            <summary>
            Enable or disable SSL (only if using non-Amazon storage).
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.AccessKey">
            <summary>
            AWS S3 access key.
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.SecretKey">
            <summary>
            AWS S3 secret key.
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.Region">
            <summary>
            AWS S3 region.
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.Bucket">
            <summary>
            AWS S3 bucket.
            </summary>
        </member>
        <member name="P:BlobHelper.AwsSettings.BaseUrl">
            <summary>
            Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.
            For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.
            </summary>
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor">
            <summary>
            Initialize the object.
            </summary>
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor(System.String,System.String,BlobHelper.AwsRegion,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor(System.String,System.String,BlobHelper.AwsRegion,System.String,System.Boolean)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
            <param name="ssl">Enable or disable SSL.</param>
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
            <param name="ssl">Enable or disable SSL.</param> 
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor(System.String,System.Boolean,System.String,System.String,BlobHelper.AwsRegion,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="endpoint">Override the AWS S3 endpoint (if using non-Amazon storage).  Use the form http://localhost:8000/.</param>
            <param name="ssl">Enable or disable SSL.</param>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
            <param name="baseUrl">Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.  For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.</param>
        </member>
        <member name="M:BlobHelper.AwsSettings.#ctor(System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="endpoint">Override the AWS S3 endpoint (if using non-Amazon storage).  Use the form http://localhost:8000/.</param>
            <param name="ssl">Enable or disable SSL.</param>
            <param name="accessKey">Access key with which to access AWS S3.</param>
            <param name="secretKey">Secret key with which to access AWS S3.</param>
            <param name="region">AWS region.</param>
            <param name="bucket">Bucket in which to store BLOBs.</param>
            <param name="baseUrl">Base URL to use for objects, i.e. https://[bucketname].s3.[regionname].amazonaws.com/.  For non-S3 endpoints, use {bucket} and {key} to indicate where these values should be inserted, i.e. http://{bucket}.[hostname]:[port]/{key} or https://[hostname]:[port]/{bucket}/key.</param>
        </member>
        <member name="M:BlobHelper.AwsSettings.GetAwsRegionEndpoint">
            <summary>
            Retrieve AWS region endpoint.
            </summary>
            <returns>AWS region endpoint.</returns>
        </member>
        <member name="M:BlobHelper.AwsSettings.ValidateRegion(System.String)">
            <summary>
            Validate a region string.
            </summary>
            <param name="region">Region.</param>
            <returns>True if valid.</returns>
        </member>
        <member name="T:BlobHelper.AzureSettings">
            <summary>
            Settings when using Microsoft Azure BLOB Storage for storage.
            </summary>
        </member>
        <member name="P:BlobHelper.AzureSettings.Ssl">
            <summary>
            Enable or disable SSL (only if using non-Azure storage).
            </summary>
        </member>
        <member name="P:BlobHelper.AzureSettings.AccountName">
            <summary>
            Microsoft Azure BLOB storage account name (the name of the account in the Azure portal).
            </summary>
        </member>
        <member name="P:BlobHelper.AzureSettings.AccessKey">
            <summary>
            Microsoft Azure BLOB storage access key.
            </summary>
        </member>
        <member name="P:BlobHelper.AzureSettings.Endpoint">
            <summary>
            Microsoft Azure BLOB storage endpoint (primary or secondary from the Azure portal, likely of the form https://[accountname].blob.core.windows.net/.
            </summary>
        </member>
        <member name="P:BlobHelper.AzureSettings.Container">
            <summary>
            Microsoft Azure BLOB storage container.
            </summary>
        </member>
        <member name="M:BlobHelper.AzureSettings.#ctor">
            <summary>
            Initialize the object.
            </summary>
        </member>
        <member name="M:BlobHelper.AzureSettings.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="accountName">The account name.</param>
            <param name="accessKey">The access key with which to access Azure BLOB storage.</param>
            <param name="endpoint">The Azure BLOB storage endpoint for the account.</param>
            <param name="container">The container in which BLOBs should be stored.</param>
        </member>
        <member name="T:BlobHelper.BlobSettings">
            <summary>
            BLOB storage settings.
            </summary>
        </member>
        <member name="T:BlobHelper.DiskSettings">
            <summary>
            Settings when using local filesystem for storage.
            </summary>
        </member>
        <member name="P:BlobHelper.DiskSettings.Directory">
            <summary>
            The filesystem directory to use.
            </summary>
        </member>
        <member name="M:BlobHelper.DiskSettings.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:BlobHelper.DiskSettings.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="directory">The directory where BLOBs should be stored.</param>
        </member>
        <member name="T:BlobHelper.KomodoSettings">
            <summary>
            Settings when using Komodo for storage.
            </summary>
        </member>
        <member name="P:BlobHelper.KomodoSettings.Endpoint">
            <summary>
            Komodo endpoint URL, of the form http://[hostname]:[port]/.
            </summary>
        </member>
        <member name="P:BlobHelper.KomodoSettings.IndexGUID">
            <summary>
            Komodo index GUID.
            </summary>
        </member>
        <member name="P:BlobHelper.KomodoSettings.ApiKey">
            <summary>
            Komodo API key.
            </summary>
        </member>
        <member name="M:BlobHelper.KomodoSettings.#ctor">
            <summary>
            Initialize the object.
            </summary>
        </member>
        <member name="M:BlobHelper.KomodoSettings.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="endpoint">Komodo endpoint, i.e. http://localhost:8000/</param>
            <param name="indexGuid">GUID of the index.</param>
            <param name="apiKey">API key with read, write, and delete permissions.</param>
        </member>
        <member name="T:BlobHelper.KvpbaseSettings">
            <summary>
            Settings when using kvpbase for storage.
            </summary>
        </member>
        <member name="P:BlobHelper.KvpbaseSettings.Endpoint">
            <summary>
            Kvpbase endpoint URL, of the form http://[hostname]:[port]/.
            </summary>
        </member>
        <member name="P:BlobHelper.KvpbaseSettings.UserGuid">
            <summary>
            Kvpbase user GUID.
            </summary>
        </member>
        <member name="P:BlobHelper.KvpbaseSettings.Container">
            <summary>
            Kvpbase container.
            </summary>
        </member>
        <member name="P:BlobHelper.KvpbaseSettings.ApiKey">
            <summary>
            Kvpbase API key.
            </summary>
        </member>
        <member name="M:BlobHelper.KvpbaseSettings.#ctor">
            <summary>
            Initialize the object.
            </summary>
        </member>
        <member name="M:BlobHelper.KvpbaseSettings.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the object.
            </summary>
            <param name="endpoint">Kvpbase endpoint, i.e. http://localhost:8000/</param>
            <param name="userGuid">GUID of the user.</param>
            <param name="container">Container in which BLOBs should be stored.</param>
            <param name="apiKey">API key with read, write, and delete permissions.</param>
        </member>
    </members>
</doc>
